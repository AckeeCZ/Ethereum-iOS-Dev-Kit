// Generated using ContractGen

import ReactiveSwift
import EtherKit
import BigInt

struct ContractMethodInvocation<T: PrivateKeyType> {
    private let send: (_ using: T, _ amount: UInt256) -> SignalProducer<Hash, EtherKitError>

    init(send: @escaping (_ using: T, _ amount: UInt256) -> SignalProducer<Hash, EtherKitError>) {
        self.send = send
    }

    func send(using: T, amount: UInt256) -> SignalProducer<Hash, EtherKitError> {
        return self.send(using, amount)
    }
}
